/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UpskillRouteImport } from './routes/upskill'
import { Route as InternshipRouteImport } from './routes/internship'
import { Route as GraduateRouteImport } from './routes/graduate'
import { Route as DoorSelectionRouteImport } from './routes/door-selection'
import { Route as IndexRouteImport } from './routes/index'

const UpskillRoute = UpskillRouteImport.update({
  id: '/upskill',
  path: '/upskill',
  getParentRoute: () => rootRouteImport,
} as any)
const InternshipRoute = InternshipRouteImport.update({
  id: '/internship',
  path: '/internship',
  getParentRoute: () => rootRouteImport,
} as any)
const GraduateRoute = GraduateRouteImport.update({
  id: '/graduate',
  path: '/graduate',
  getParentRoute: () => rootRouteImport,
} as any)
const DoorSelectionRoute = DoorSelectionRouteImport.update({
  id: '/door-selection',
  path: '/door-selection',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/door-selection': typeof DoorSelectionRoute
  '/graduate': typeof GraduateRoute
  '/internship': typeof InternshipRoute
  '/upskill': typeof UpskillRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/door-selection': typeof DoorSelectionRoute
  '/graduate': typeof GraduateRoute
  '/internship': typeof InternshipRoute
  '/upskill': typeof UpskillRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/door-selection': typeof DoorSelectionRoute
  '/graduate': typeof GraduateRoute
  '/internship': typeof InternshipRoute
  '/upskill': typeof UpskillRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/door-selection' | '/graduate' | '/internship' | '/upskill'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/door-selection' | '/graduate' | '/internship' | '/upskill'
  id:
    | '__root__'
    | '/'
    | '/door-selection'
    | '/graduate'
    | '/internship'
    | '/upskill'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DoorSelectionRoute: typeof DoorSelectionRoute
  GraduateRoute: typeof GraduateRoute
  InternshipRoute: typeof InternshipRoute
  UpskillRoute: typeof UpskillRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/upskill': {
      id: '/upskill'
      path: '/upskill'
      fullPath: '/upskill'
      preLoaderRoute: typeof UpskillRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/internship': {
      id: '/internship'
      path: '/internship'
      fullPath: '/internship'
      preLoaderRoute: typeof InternshipRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/graduate': {
      id: '/graduate'
      path: '/graduate'
      fullPath: '/graduate'
      preLoaderRoute: typeof GraduateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/door-selection': {
      id: '/door-selection'
      path: '/door-selection'
      fullPath: '/door-selection'
      preLoaderRoute: typeof DoorSelectionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DoorSelectionRoute: DoorSelectionRoute,
  GraduateRoute: GraduateRoute,
  InternshipRoute: InternshipRoute,
  UpskillRoute: UpskillRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
